generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  TEACHER
}

model User{
  id Int @id @default(autoincrement())
  username String @unique
  password String
  active Boolean @default(true)
  type Role @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime  @default(now())
  classes Class[]
}

model Student{
  id Int @id @default(autoincrement())
  name String 
  class  Class  @relation(fields: [classId], references: [id])
  createdAt DateTime @default(now())
  classId  Int
}

// model Class{
// id Int @id @default(autoincrement())
// name String 
// klasseKode String? @unique @default("")
// room String 
// createdAt DateTime @default(now())
// school String 
// user   User   @relation(fields: [userId], references: [id])
// userId  Int
// Students Student[]
// Projects Project[]
// }

model Class{
  id Int @id @default(autoincrement())
  name String @unique
  klasseKode String? @unique @default("")
  room String @unique
  createdAt DateTime @default(now())
  school String 
  user   User   @relation(fields: [userId], references: [id])
  userId  Int
  Students Student[]
  Projects Project[]
}

model Map{
  id Int @id @default(autoincrement())
  name String
  createdAt DateTime
  active Boolean
}


model School{
  id Int @id @default(autoincrement())
  name String 
  createdAt DateTime
}


model Group{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  UpdatedAt DateTime @default(now())
  active Boolean @default(true)
  
   Group_members GroupMembers[]
  project   Project   @relation(fields: [projectId], references: [id])
  projectId  Int
}

model Member{
  id Int @id @default(autoincrement())
  name String
  createdAt DateTime
  UpdatedAt DateTime
  group_members  GroupMembers  @relation(fields: [groupMemberId], references: [id])
  groupMemberId Int
}
model GroupMembers{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  memeberList String
  UpdatedAt DateTime @default(now())
  group  Group  @relation(fields: [groupId], references: [id])
  groupId Int
  members Member[]
}

model Project{
  id Int @id @default(autoincrement())
  title String  
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  active Boolean @default(true)
  class   Class   @relation(fields: [classId], references: [id])
  classId  Int
  groups Group[]
}